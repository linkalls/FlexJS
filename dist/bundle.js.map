{
  "version": 3,
  "sources": ["../src/name_controller.js", "../src/index.js"],
  "sourcesContent": ["export function aqa(element) {\r\n  console.log(\"aqa\u95A2\u6570\u306Eelement\u306F\", element)\r\n  console.log(element.dataset.count)\r\n\r\n  if (!element.dataset.count) {\r\n    element.dataset.count = \"0\"\r\n  }\r\n\r\n  // data-count\u5C5E\u6027\u3092\u30A4\u30F3\u30AF\u30EA\u30E1\u30F3\u30C8\r\n  element.dataset.count = (parseInt(element.dataset.count) + 1).toString()\r\n\r\n  // \u5B9F\u884C\u5185\u5BB9\u3092\u66F4\u65B0\r\n  element.innerHTML = `aqa\u95A2\u6570\u304C${element.dataset.count}\u56DE\u5B9F\u884C\u3055\u308C\u307E\u3057\u305F\\n \u30E9\u30F3\u30C0\u30E0\u306A\u6570\u5024: `\r\n  element.innerHTML += Math.floor(Math.random() * 100 + 1)\r\n}\r\n", "const Confirms = document.querySelectorAll(\"[data-confirm]\")\r\n\r\nConfirms.forEach((confirm) => {\r\n  const message = confirm.getAttribute(\"data-confirm\")\r\n  const trigger = confirm.dataset.trigger || \"click\"\r\n\r\n  const handleEvent = (event) => {\r\n    if (!window.confirm(message)) {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  if (trigger === \"hover\") {\r\n    confirm.addEventListener(\"mouseover\", handleEvent)\r\n  } else {\r\n    confirm.addEventListener(trigger, handleEvent)\r\n  }\r\n})\r\n\r\nconst dataControllers = document.querySelectorAll(\"[data-controller]\")\r\n\r\ndataControllers.forEach(async (controller) => {\r\n  const [controllerName, functionName] = controller\r\n    .getAttribute(\"data-controller\")\r\n    .split(\"#\")\r\n  const trigger = controller.dataset.trigger || null\r\n  console.log(\r\n    `\u30B3\u30F3\u30C8\u30ED\u30FC\u30E9\u30FC\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D: ${controllerName}, \u95A2\u6570: ${functionName}, \u30C8\u30EA\u30AC\u30FC: ${trigger}`\r\n  )\r\n\r\n  const handleEvent = async (event) => {\r\n    try {\r\n      const module = await import(`./${controllerName}_controller.js`)\r\n      if (module[functionName]) {\r\n        module[functionName](controller)\r\n      } else {\r\n        console.error(\r\n          `\u95A2\u6570\u540D ${functionName}\u306F ${controllerName}_controller.js\u3067\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3067\u3057\u305F`\r\n        )\r\n      }\r\n    } catch (error) {\r\n      console.error(`Failed to load controller ${controllerName}:`, error)\r\n    }\r\n  }\r\n\r\n  if (trigger !== null) {\r\n    controller.addEventListener(trigger, handleEvent)\r\n  } else if (trigger === \"hover\") {\r\n    controller.addEventListener(\"mouseover\", handleEvent)\r\n  } else {\r\n    handleEvent()\r\n  }\r\n})\r\n"],
  "mappings": "2aAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,SAAAE,IAAO,SAASA,EAAIC,EAAS,CAC3B,QAAQ,IAAI,qCAAkBA,CAAO,EACrC,QAAQ,IAAIA,EAAQ,QAAQ,KAAK,EAE5BA,EAAQ,QAAQ,QACnBA,EAAQ,QAAQ,MAAQ,KAI1BA,EAAQ,QAAQ,OAAS,SAASA,EAAQ,QAAQ,KAAK,EAAI,GAAG,SAAS,EAGvEA,EAAQ,UAAY,wBAASA,EAAQ,QAAQ,KAAK;AAAA,+CAClDA,EAAQ,WAAa,KAAK,MAAM,KAAK,OAAO,EAAI,IAAM,CAAC,CACzD,CAdA,IAAAC,EAAAC,EAAA,kFCAA,IAAMC,EAAW,SAAS,iBAAiB,gBAAgB,EAE3DA,EAAS,QAASC,GAAY,CAC5B,IAAMC,EAAUD,EAAQ,aAAa,cAAc,EAC7CE,EAAUF,EAAQ,QAAQ,SAAW,QAErCG,EAAeC,GAAU,CACxB,OAAO,QAAQH,CAAO,GACzBG,EAAM,eAAe,CAEzB,EAEIF,IAAY,QACdF,EAAQ,iBAAiB,YAAaG,CAAW,EAEjDH,EAAQ,iBAAiBE,EAASC,CAAW,CAEjD,CAAC,EAED,IAAME,EAAkB,SAAS,iBAAiB,mBAAmB,EAErEA,EAAgB,QAAeC,GAAeC,EAAA,wBAC5C,GAAM,CAACC,EAAgBC,CAAY,EAAIH,EACpC,aAAa,iBAAiB,EAC9B,MAAM,GAAG,EACNJ,EAAUI,EAAW,QAAQ,SAAW,KAC9C,QAAQ,IACN,mFAAkBE,CAAc,mBAASC,CAAY,+BAAWP,CAAO,EACzE,EAEA,IAAMC,EAAqBC,GAAUG,EAAA,wBACnC,GAAI,CACF,IAAMG,EAAS,MAAaC,EAAA,KAAKH,CAAc,kBAC3CE,EAAOD,CAAY,EACrBC,EAAOD,CAAY,EAAEH,CAAU,EAE/B,QAAQ,MACN,sBAAOG,CAAY,UAAKD,CAAc,kFACxC,CAEJ,OAASI,EAAO,CACd,QAAQ,MAAM,6BAA6BJ,CAAc,IAAKI,CAAK,CACrE,CACF,GAEIV,IAAY,KACdI,EAAW,iBAAiBJ,EAASC,CAAW,EACvCD,IAAY,QACrBI,EAAW,iBAAiB,YAAaH,CAAW,EAEpDA,EAAY,CAEhB,EAAC",
  "names": ["name_controller_exports", "__export", "aqa", "element", "init_name_controller", "__esmMin", "Confirms", "confirm", "message", "trigger", "handleEvent", "event", "dataControllers", "controller", "__async", "controllerName", "functionName", "module", "globImport__controller_js", "error"]
}
